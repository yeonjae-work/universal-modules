[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "universal-modules"
version = "1.0.0"
description = "Universal modules for cross-platform development"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Universal Modules Team", email = "contact@codeping.ai"}
]
maintainers = [
    {name = "Universal Modules Team", email = "contact@codeping.ai"}
]
keywords = ["universal", "modules", "cross-platform", "python"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities"
]
requires-python = ">=3.9"
dependencies = [
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "toml>=0.10.0",
    "semver>=3.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "pip-audit>=2.6.0"
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "sphinx-autodoc-typehints>=1.24.0"
]
all = [
    "universal-modules[dev,docs]"
]

[project.urls]
Homepage = "https://github.com/yeonjae-work/universal-modules"
Documentation = "https://universal-modules.readthedocs.io"
Repository = "https://github.com/yeonjae-work/universal-modules"
"Bug Tracker" = "https://github.com/yeonjae-work/universal-modules/issues"
Changelog = "https://github.com/yeonjae-work/universal-modules/blob/main/CHANGELOG.md"

[project.scripts]
universal-version = "scripts.version_manager:main"
universal-docs = "scripts.update_documentation:main"

[tool.hatch.build.targets.wheel]
packages = ["packages"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["universal_git_data_parser", "universal_http_api_client", "universal_llm_service", "universal_notification_service", "universal_notion_sync"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "packages/*/tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests"
]

[tool.coverage.run]
source = ["packages"]
branch = true
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/.*",
    "*/venv/*",
    "*/env/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.bandit]
exclude_dirs = ["tests", "venv", "env"]
skips = ["B101", "B601"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    "env",
    ".venv",
    ".env",
    "build",
    "dist",
    "*.egg-info"
] 